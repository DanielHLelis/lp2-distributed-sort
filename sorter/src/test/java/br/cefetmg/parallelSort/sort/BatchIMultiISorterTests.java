package br.cefetmg.parallelSort.sort;

import br.cefetmg.parallelSort.sort.multisorters.BatchMultiSort;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class BatchIMultiISorterTests {
  private final List<List<Integer>> INPUT_REF = List.of(
          List.of(
                  564, 938, 779, -841, 657, 923, -718, -144, -562, 155, -116, 373, -563, -357, -642, -541, -565
          ),
          List.of(
                  593, 423, -371, -705, -111, 766, -176, 8, 250, 61, 573, 593, 649, 989, -215, 519, -254, -442, -667, -79, 484, 603, 209, 912, -976, 491, 516, 839, -544, -511, -918, -896, -166, 645
          ),
          List.of(
          ),
          List.of(
                  -213, 998, -859, -305, 536, 497, 981, 434, 545, -168, -660, 751, 614, 656, -753, 649, 32, -80, 827, -73, -399, 896, 585, -632, 325, -115, -674, 613, -761, -784, -88
          ),
          List.of(
                  -577, -639, -646, -162, -405, -143, 75, 694, -385, -776, 456, 495, 298, -391, -925, -279, 837, 960, 961, 795, 171, 654, -753, -40, 134, 812, 963, 415, -153, 299, 454, 803, -664, 953
          ),
          List.of(
          ),
          List.of(
                  -122, -289, -418, -208, -55, 107, 960, -690, 350, 894, -767, 592, 794
          ),
          List.of(
                  -634, -509, 669, 681, 783, 750, -555, -474, 175, -382, -366, -841, -198, 295, -733, 249, -70, -568, 330, -740, 468, 484, 212, 777, -485, -975, -571, -992, 767, -519, -360, 750, -364, -142, -499, -745, -814, -338, 465, 816
          )
  );

  private final List<List<Integer>> EXPECTED_REF = List.of(
          List.of(
                  -841, -718, -642, -565, -563, -562, -541, -357, -144, -116, 155, 373, 564, 657, 779, 923, 938
          ),
          List.of(
                  -976, -918, -896, -705, -667, -544, -511, -442, -371, -254, -215, -176, -166, -111, -79, 8, 61, 209, 250, 423, 484, 491, 516, 519, 573, 593, 593, 603, 645, 649, 766, 839, 912, 989
          ),
          List.of(

          ),
          List.of(
                  -859, -784, -761, -753, -674, -660, -632, -399, -305, -213, -168, -115, -88, -80, -73, 32, 325, 434, 497, 536, 545, 585, 613, 614, 649, 656, 751, 827, 896, 981, 998
          ),
          List.of(
                  -925, -776, -753, -664, -646, -639, -577, -405, -391, -385, -279, -162, -153, -143, -40, 75, 134, 171, 298, 299, 415, 454, 456, 495, 654, 694, 795, 803, 812, 837, 953, 960, 961, 963
          ),
          List.of(

          ),
          List.of(
                  -767, -690, -418, -289, -208, -122, -55, 107, 350, 592, 794, 894, 960
          ),
          List.of(
                  -992, -975, -841, -814, -745, -740, -733, -634, -571, -568, -555, -519, -509, -499, -485, -474, -382, -366, -364, -360, -338, -198, -142, -70, 175, 212, 249, 295, 330, 465, 468, 484, 669, 681, 750, 750, 767, 777, 783, 816
          )
  );


  @Test
  public void batchSorter() {
    IMultiSorter<Integer> sorter = new BatchMultiSort<>();
    List<List<Integer>> out = sorter.sort(INPUT_REF);
    assertEquals(EXPECTED_REF, out);
  }
}